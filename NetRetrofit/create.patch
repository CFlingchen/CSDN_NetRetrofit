Index: app/src/main/java/com/lingchen/netretrofit/net/BaseComApi.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/lingchen/netretrofit/net/BaseComApi.java	(revision d8b4c157c9a4115a8e316ba9c7d27aadfbf2813b)
+++ app/src/main/java/com/lingchen/netretrofit/net/BaseComApi.java	(revision )
@@ -11,10 +11,9 @@
 import io.reactivex.FlowableOnSubscribe;
 import io.reactivex.FlowableTransformer;
 import io.reactivex.android.schedulers.AndroidSchedulers;
-import io.reactivex.disposables.Disposable;
+import io.reactivex.functions.Cancellable;
 import io.reactivex.internal.schedulers.IoScheduler;
 import retrofit2.Call;
-import retrofit2.Callback;
 import retrofit2.Response;
 
 /**
@@ -39,32 +38,36 @@
         return Flowable.create(new FlowableOnSubscribe<T>() {
             @Override
             public void subscribe(final FlowableEmitter<T> e) throws Exception {
-                call.enqueue(new Callback<T>() {
+                //设置取消监听
+                e.setCancellable(new Cancellable() {
                     @Override
-                    public void onResponse(Call<T> call, Response<T> response) {
+                    public void cancel() throws Exception {
+                        Log.e(TAG, "cancel: ");
+                        if (!call.isCanceled()) {
+                            call.cancel();
+                        }
+                    }
+                });
+                //同步执行请求，把线程管理交给Rx
+                try {
+                    Response<T> response = call.execute();
-                        Log.e(TAG, "onResponse: ");
-                        if (!e.isCancelled()) {
+                    Log.e(TAG, "onResponse: ");
+                    if (!e.isCancelled()) {
-                            Log.e(TAG, "onResponse: no cancel");
-                            e.onNext(response.body());
-                            e.onComplete();
-                        }
+                        e.onNext(response.body());
+                        e.onComplete();
+                    }
-                        call.cancel();
-                    }
-
-                    @Override
-                    public void onFailure(Call<T> call, Throwable t) {
-                        Log.e(TAG, "onFailure: ");
+                } catch (Exception exception) {
+                    Log.e(TAG, "exception with: exception = [" + exception.getMessage() + "]");
-                        if (!e.isCancelled()) {
-                            Log.e(TAG, "onResponse: no cancel");
+                    if (!e.isCancelled()) {
+                        Log.e(TAG, "onResponse: no cancel");
-                            e.onError(t);
+                        e.onError(exception);
-                            e.onComplete();
-                        }
+                        e.onComplete();
+                    }
-                        call.cancel();
-                    }
+                }
-                });
             }
         }, BackpressureStrategy.BUFFER);
     }
+
 
     /**
      * 后台线程执行同步，主线程执行异步操作
Index: app/src/main/java/com/lingchen/netretrofit/CheckVersionActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/lingchen/netretrofit/CheckVersionActivity.java	(revision d8b4c157c9a4115a8e316ba9c7d27aadfbf2813b)
+++ app/src/main/java/com/lingchen/netretrofit/CheckVersionActivity.java	(revision )
@@ -132,13 +132,13 @@
                     }
                 })
                 .subscribe());
-      /*  //延迟0.1s取消
+        /*//延迟0.1s取消
         resultTv.postDelayed(new Runnable() {
             @Override
             public void run() {
                 clear();
             }
-        }, 100);*/
+        }, 200);*/
     }
 
 }
